import numpy as np
import matplotlib.pyplot as plt

def plot_constraints(A, b):
    plt.figure(figsize=(8, 8))

    x = np.linspace(0, 5, 400)

    # Plot constraints
    plt.plot(x, 10 - 2*x, label=r'$2x + y \leq 10$')
    plt.plot(x, (4*x + 8) / 5, label=r'$4x - 5y \geq -8$')
    
    # Non-negativity constraints
    plt.axhline(0, color='black', linewidth=0.5)
    plt.axvline(0, color='black', linewidth=0.5)

    plt.xlim(0, 5)
    plt.ylim(0, 12)
    plt.xlabel('x')
    plt.ylabel('y')
    plt.legend()
    plt.grid(True)
    plt.show()

def solve_graphical_method(c, A, b):
    # Objective function: Z = c[0]*x + c[1]*y
    plot_constraints(A, b)

# Example usage
c = np.array([-3, -2])  # Coefficients of the objective function to be maximized
A = np.array([[2, 1], [-4, 5]])  # Coefficients of the inequality constraints
b = np.array([10, -8])  # Right-hand side of the inequality constraints

solve_graphical_method(c, A, b)
